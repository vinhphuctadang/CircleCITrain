version: 2.1
# Set the main 'executor' for jobs, use when needed
executors:
  node:
    docker:
      - image: circleci/node:8.17
  py3:
    docker:
      - image: circleci/python:3.6
orbs:
  # use this orbs for minikube
  minikube: ccpgames/minikube@0.0.1
  # use this orb for gke deployment
  gcp-gke: circleci/gcp-gke@1.0.4
# our jobs
jobs:
  # job: run unit test
  unit-test: # The job's name
    machine:
      image: circleci/classic:latest
    # Steps are a list of commands to run inside the docker container above
    steps:
      - checkout
      - restore_cache:
          keys:
            - v0-deps-{{ checksum "package.json" }}
            - v0-deps-
      - run:
          name: Install dependencies
          command: |
            source $NVM_DIR/nvm.sh
            nvm install 10.21
            npm install

      - save_cache:
          paths:
            - ./node_modules
          key: v0-deps-{{ checksum "package.json" }}

      - run:
          name: Up test environment
          command: |
            export ENV=test
            ./cmd.sh start
            docker ps -a      # debug
            ls
      - run:
          name: Run server
          command: |
            export ENV=test
            source $NVM_DIR/nvm.sh
            nvm use 10.21
            node index.js
          background: true
      - run:
          name: Wait for server healthiness
          command: while ! nc -z localhost 8080 ; do sleep 1 ; done
      - run:
          name: Run server logic tests
          command: |
            source $NVM_DIR/nvm.sh
            nvm use 10.21
            mkdir junit
            MOCHA_FILE=./junit/test-results.xml ./node_modules/mocha/bin/mocha ./test --reporter ./node_modules/mocha-junit-reporter
      - store_test_results:
          path: ./junit
      - store_artifacts:
          path: ./junit
      - persist_to_workspace:
          root: ./
          paths:
              - ./
      - run: echo "Test phase passed"

  # job: build docker image and push to dockerhub
  build:
    executor: node
    # execution steps
    steps:
    - checkout
    - setup_remote_docker
    - attach_workspace:
        at: .
    - run:
        name: build and push
        command: |
          docker login -u $DOCKER_USER -p $DOCKER_PASS              # login first
          docker build -t vinhphuctadang/key-value-server:latest .  # build
          docker push vinhphuctadang/key-value-server:latest        # push to dockerhub
  # job: run minikube and unit test
  minikube-test:
    machine:
      # following image is suggested and tested by https://github.com/gavinzhou/ci-minikube
      image: "circleci/classic:201808-01"
      # NOOO! Docker layer caching is not on my free plan
      # docker_layer_caching: true
    steps:
    - checkout
    - minikube/kubectl-install
    - minikube/minikube-install
    - minikube/minikube-start
    - run:
        name: Deploy to minikube
        command: |
          export ENV=minikube
          sudo -E minikube addons enable ingress
          sudo chmod 755 ~/.minikube/client.key
          ./cmd.sh start
          kubectl get pods
    - run:
        name: Run tests
        command: |
          export TEST_URL=http://$(kubectl get ing | grep key-value | awk '{print $4}')
          echo "Test URL: $TEST_URL"
          source $NVM_DIR/nvm.sh
          nvm use 10.21
          mkdir minikube
          MOCHA_FILE=./minikube/test-results.xml ./node_modules/mocha/bin/mocha ./test --reporter ./node_modules/mocha-junit-reporter
    - store_test_results:
        path: ./minikube
    - store_artifacts:
        path: ./minikube
    - persist_to_workspace:
        root: ./
        paths:
            - ./
  stage-test:
    # py36 for running locust test
    executor: py3
    steps:
    # REMEMBER to set 3 params: GCLOUD_SERVICE_KEY, GOOGLE_COMPUTE_ZONE, GOOGLE_PROJECT_ID
    - checkout
    - gcp-gke/update-kubeconfig-with-credentials:
        # install kubectl
        install-kubectl: true
        # to login
        perform-login: true
        # point to which cluster
        cluster: cluster-1
    - run:
        name: Deploy to gke
        # start environment stage we have configured
        command: |
          export ENV=stage
          ./cmd.sh start
    - run:
        name: Install python3 requirements
        command: pip3 install locust==1.1
    - run:
        name: Stage load test
        command: |
          host=$(kubectl get ing | grep key-value | awk '{print $3}')
          while [ "$host" = "" ];
          do
            echo "Host is empty, be patient"
          done
          echo "Host: $host"
          cd test_load/
          mkdir result
          locust --host=http://${host} --headless -u 100 -r 20 --run-time 5s --csv=result/keyvalue
    - store_test_results:
        path: ./test_load/result/
workflows:
  test: # workflow name
    jobs: # workflow job list
    # - unit-test
    # - build:
    #     requires:
    #     - unit-test
    #     context: learn-circleci
    # - minikube-test
    - stage-test:
        context: learn-circleci
